name: CI-CD pipeline to AWS
env:
  SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
  EB_S3_BUCKET_NAME: ${{ vars.EB_S3_BUCKET_NAME }}
  EB_APPLICATION_NAME: ${{ vars.EB_APPLICATION_NAME }}
  EB_ENVIRONMENT_NAME: ${{ vars.EB_ENVIRONMENT_NAME }}
  DEPLOY_PACKAGE_NAME: "tradeship-backend-${{ github.sha }}.zip"
  VERSION_NAME: ${{ github.sha }}
  AWS_REGION_NAME: ${{ vars.AWS_REGION_NAME }}

  DB_HOST: ${{ vars.DB_HOST }}
  DB_NAME: ${{ vars.DB_NAME }}
  DB_USER: ${{ vars.DB_USER }}
  DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

  ALLOWED_HOSTS: ${{ vars.ALLOWED_HOSTS }}

on:
  push:
    branches:
      - develop #Use your own branch here (Might be staging or testing)
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Git clone on our repo
        uses: actions/checkout@v4

      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_SECRET_KEY: ${{ secrets.DJANGO_SECRET_KEY }}
          envkey_ALLOWED_HOSTS: ${{ vars.ALLOWED_HOSTS }}
          envkey_DB_NAME: ${{ vars.DB_NAME }}
          envkey_DB_USER: ${{ vars.DB_USER }}
          envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          envkey_DB_HOST: ${{ vars.DB_HOST }}
          envkey_DB_PORT: ${{ vars.DB_PORT }}
          envkey_CORS_ORIGIN_WHITELIST: ${{ vars.CORS_ORIGIN_WHITELIST }}

      - name: Create zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}
      - name: Copying file to S3
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_S3_BUCKET_NAME }}/
      - name: Print nice message on success finish
        run: echo "CI part finished successfuly"
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create new EBL app ver
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "${{ env.VERSION_NAME }}"

      - name: Deploy new app
        run: |
          aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "${{ env.VERSION_NAME }}" \
          --option-settings Namespace=aws:elasticbeanstalk:application:environment,OptionName=SECRET_KEY,Value="${{ env.SECRET_KEY }}"

      - name: Wait for deployment to complete
        run: |
          aws elasticbeanstalk wait environment-updated --environment-name ${{ env.EB_ENVIRONMENT_NAME }}

      - name: Print nice message on success finish
        run: echo "CD part finished successfully - migrations run automatically via .ebextensions"
