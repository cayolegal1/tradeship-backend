# Generated by Django 5.2.6 on 2025-09-22 11:18

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationBatch',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Name/description of this batch', max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('title_template', models.CharField(help_text='Template for notification titles', max_length=255)),
                ('message_template', models.TextField(help_text='Template for notification messages')),
                ('scheduled_for', models.DateTimeField(blank=True, help_text='When to send this batch (null for immediate)', null=True)),
                ('total_recipients', models.PositiveIntegerField(default=0)),
                ('sent_count', models.PositiveIntegerField(default=0)),
                ('failed_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Notification title/subject', max_length=255)),
                ('message', models.TextField(help_text='Notification message content')),
                ('object_id', models.UUIDField(blank=True, help_text='ID of related object', null=True)),
                ('is_read', models.BooleanField(default=False, help_text='Whether notification has been read')),
                ('read_at', models.DateTimeField(blank=True, help_text='When notification was marked as read', null=True)),
                ('email_sent', models.BooleanField(default=False, help_text='Whether email notification was sent')),
                ('email_sent_at', models.DateTimeField(blank=True, help_text='When email notification was sent', null=True)),
                ('push_sent', models.BooleanField(default=False, help_text='Whether push notification was sent')),
                ('push_sent_at', models.DateTimeField(blank=True, help_text='When push notification was sent', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional notification data')),
                ('action_url', models.URLField(blank=True, help_text='URL to redirect user when notification is clicked', max_length=500)),
                ('expires_at', models.DateTimeField(blank=True, help_text='When notification expires (optional)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, help_text='Type of related object', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(help_text='User who receives this notification', on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(blank=True, help_text='User who triggered this notification (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sent_notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NotificationBatchRecipient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('skipped', 'Skipped')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True, help_text='Error message if sending failed')),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps_notification.notificationbatch')),
                ('notification', models.OneToOneField(blank=True, help_text='Created notification for this recipient', null=True, on_delete=django.db.models.deletion.CASCADE, to='apps_notification.notification')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='notificationbatch',
            name='recipients',
            field=models.ManyToManyField(related_name='notification_batches', through='apps_notification.NotificationBatchRecipient', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='NotificationType',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('trade_request', 'Trade Request'), ('trade_accepted', 'Trade Accepted'), ('trade_declined', 'Trade Declined'), ('trade_completed', 'Trade Completed'), ('trade_cancelled', 'Trade Cancelled'), ('message_received', 'Message Received'), ('item_liked', 'Item Liked'), ('item_comment', 'Item Comment'), ('profile_viewed', 'Profile Viewed'), ('system_announcement', 'System Announcement'), ('account_security', 'Account Security'), ('payment_received', 'Payment Received'), ('payment_sent', 'Payment Sent'), ('rating_received', 'Rating Received'), ('item_expired', 'Item Expired'), ('promotion', 'Promotion'), ('reminder', 'Reminder')], help_text='Type of notification', max_length=50, unique=True)),
                ('display_name', models.CharField(help_text='Human-readable name for the notification type', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of when this notification type is used')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this notification type is currently active')),
                ('requires_action', models.BooleanField(default=False, help_text='Whether this notification requires user action')),
                ('auto_mark_read', models.BooleanField(default=False, help_text='Automatically mark as read when viewed')),
                ('default_email_enabled', models.BooleanField(default=True, help_text='Default email notification setting for new users')),
                ('default_push_enabled', models.BooleanField(default=True, help_text='Default push notification setting for new users')),
                ('default_in_app_enabled', models.BooleanField(default=True, help_text='Default in-app notification setting for new users')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('normal', 'Normal'), ('high', 'High'), ('urgent', 'Urgent')], default='normal', help_text='Priority level of this notification type', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='apps_notifi_name_d280a9_idx'), models.Index(fields=['is_active'], name='apps_notifi_is_acti_42e0a7_idx'), models.Index(fields=['priority'], name='apps_notifi_priorit_537ca4_idx')],
            },
        ),
        migrations.AddField(
            model_name='notificationbatch',
            name='notification_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='batches', to='apps_notification.notificationtype'),
        ),
        migrations.AddField(
            model_name='notification',
            name='notification_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='apps_notification.notificationtype'),
        ),
        migrations.CreateModel(
            name='NotificationUserSettings',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email_enabled', models.BooleanField(default=True, help_text='Receive email notifications for this type')),
                ('push_enabled', models.BooleanField(default=True, help_text='Receive push notifications for this type')),
                ('in_app_enabled', models.BooleanField(default=True, help_text='Receive in-app notifications for this type')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notification_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_settings', to='apps_notification.notificationtype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_settings', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='notificationbatchrecipient',
            index=models.Index(fields=['batch'], name='apps_notifi_batch_i_afe3d8_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationbatchrecipient',
            index=models.Index(fields=['recipient'], name='apps_notifi_recipie_c6a7bd_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationbatchrecipient',
            index=models.Index(fields=['status'], name='apps_notifi_status_75d64c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationbatchrecipient',
            unique_together={('batch', 'recipient')},
        ),
        migrations.AddIndex(
            model_name='notificationbatch',
            index=models.Index(fields=['status'], name='apps_notifi_status_08c078_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationbatch',
            index=models.Index(fields=['scheduled_for'], name='apps_notifi_schedul_bd6fd9_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationbatch',
            index=models.Index(fields=['created_at'], name='apps_notifi_created_291c6c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', '-created_at'], name='apps_notifi_recipie_59941c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'is_read'], name='apps_notifi_recipie_be332a_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['notification_type'], name='apps_notifi_notific_10af40_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['sender'], name='apps_notifi_sender__27a02c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['created_at'], name='apps_notifi_created_6bd8b6_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['expires_at'], name='apps_notifi_expires_c8dd5c_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['content_type', 'object_id'], name='apps_notifi_content_0a9046_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationusersettings',
            index=models.Index(fields=['user'], name='apps_notifi_user_id_18293a_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationusersettings',
            index=models.Index(fields=['notification_type'], name='apps_notifi_notific_bdea89_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='notificationusersettings',
            unique_together={('user', 'notification_type')},
        ),
    ]
