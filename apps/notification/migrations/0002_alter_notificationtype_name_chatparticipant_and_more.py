# Generated by Django 5.2.6 on 2025-09-23 18:25

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('apps_notification', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='notificationtype',
            name='name',
            field=models.CharField(choices=[('trade_request', 'Trade Request'), ('trade_accepted', 'Trade Accepted'), ('trade_declined', 'Trade Declined'), ('trade_completed', 'Trade Completed'), ('trade_cancelled', 'Trade Cancelled'), ('message_received', 'Message Received'), ('item_liked', 'Item Liked'), ('item_comment', 'Item Comment'), ('profile_viewed', 'Profile Viewed'), ('system_announcement', 'System Announcement'), ('account_security', 'Account Security'), ('payment_received', 'Payment Received'), ('payment_sent', 'Payment Sent'), ('rating_received', 'Rating Received'), ('item_expired', 'Item Expired'), ('promotion', 'Promotion'), ('reminder', 'Reminder'), ('chat_message', 'Chat Message'), ('chat_typing', 'Chat Typing Indicator'), ('chat_read', 'Chat Message Read'), ('chat_group_created', 'Group Chat Created'), ('chat_group_joined', 'Joined Group Chat'), ('chat_group_left', 'Left Group Chat'), ('chat_mention', 'Mentioned in Chat')], help_text='Type of notification', max_length=50, unique=True),
        ),
        migrations.CreateModel(
            name='ChatParticipant',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('member', 'Member'), ('admin', 'Admin'), ('owner', 'Owner')], default='member', help_text='Participant role in the conversation', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether participant is active in conversation')),
                ('is_muted', models.BooleanField(default=False, help_text='Whether participant has muted the conversation')),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('left_at', models.DateTimeField(blank=True, null=True)),
                ('last_read_at', models.DateTimeField(blank=True, help_text='When participant last read messages', null=True)),
                ('added_by', models.ForeignKey(blank=True, help_text='User who added this participant', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chat_participants_added', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('conversation_type', models.CharField(choices=[('direct', 'Direct Message'), ('group', 'Group Chat'), ('trade', 'Trade Discussion'), ('support', 'Support Chat')], default='direct', help_text='Type of conversation', max_length=20)),
                ('title', models.CharField(blank=True, help_text='Conversation title (for group chats)', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Conversation description')),
                ('object_id', models.UUIDField(blank=True, help_text='ID of related object', null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Whether conversation is active')),
                ('is_archived', models.BooleanField(default=False, help_text='Whether conversation is archived')),
                ('is_private', models.BooleanField(default=True, help_text='Whether conversation is private')),
                ('allow_new_participants', models.BooleanField(default=False, help_text='Whether new participants can be added')),
                ('last_message_at', models.DateTimeField(blank=True, help_text='When the last message was sent', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, help_text='Type of related object', null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('created_by', models.ForeignKey(help_text='User who created this conversation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='conversations_created', to=settings.AUTH_USER_MODEL)),
                ('participants', models.ManyToManyField(help_text='Users participating in this conversation', related_name='conversations', through='apps_notification.ChatParticipant', through_fields=('conversation', 'user'), to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_message_at', '-created_at'],
            },
        ),
        migrations.AddField(
            model_name='chatparticipant',
            name='conversation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='apps_notification.conversation'),
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('text', 'Text Message'), ('image', 'Image'), ('file', 'File'), ('system', 'System Message'), ('trade_offer', 'Trade Offer'), ('location', 'Location'), ('sticker', 'Sticker')], default='text', help_text='Type of message', max_length=20)),
                ('content', models.TextField(help_text='Message content')),
                ('file', models.FileField(blank=True, help_text='Attached file (for image/file messages)', null=True, upload_to='chat/files/')),
                ('file_name', models.CharField(blank=True, help_text='Original filename', max_length=255)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='File size in bytes', null=True)),
                ('mime_type', models.CharField(blank=True, help_text='MIME type of attached file', max_length=100)),
                ('is_edited', models.BooleanField(default=False, help_text='Whether message has been edited')),
                ('is_deleted', models.BooleanField(default=False, help_text='Whether message has been deleted')),
                ('delivered_at', models.DateTimeField(blank=True, help_text='When message was delivered', null=True)),
                ('metadata', models.JSONField(blank=True, default=dict, help_text='Additional message data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reply_to', models.ForeignKey(blank=True, help_text='Message this is replying to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='apps_notification.chatmessage')),
                ('sender', models.ForeignKey(help_text='User who sent this message', on_delete=django.db.models.deletion.CASCADE, related_name='chat_messages_sent', to=settings.AUTH_USER_MODEL)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='apps_notification.conversation')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['conversation_type'], name='apps_notifi_convers_851dc5_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['created_by'], name='apps_notifi_created_392d8c_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['is_active'], name='apps_notifi_is_acti_e79a7a_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['last_message_at'], name='apps_notifi_last_me_2422ff_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['content_type', 'object_id'], name='apps_notifi_content_3cd21b_idx'),
        ),
        migrations.AddIndex(
            model_name='chatparticipant',
            index=models.Index(fields=['conversation', 'is_active'], name='apps_notifi_convers_f2f704_idx'),
        ),
        migrations.AddIndex(
            model_name='chatparticipant',
            index=models.Index(fields=['user', 'is_active'], name='apps_notifi_user_id_d4ba1e_idx'),
        ),
        migrations.AddIndex(
            model_name='chatparticipant',
            index=models.Index(fields=['last_read_at'], name='apps_notifi_last_re_9620f7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chatparticipant',
            unique_together={('conversation', 'user')},
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['conversation', '-created_at'], name='apps_notifi_convers_7e2cae_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['sender'], name='apps_notifi_sender__090849_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['message_type'], name='apps_notifi_message_603566_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['is_deleted'], name='apps_notifi_is_dele_40ee02_idx'),
        ),
        migrations.AddIndex(
            model_name='chatmessage',
            index=models.Index(fields=['reply_to'], name='apps_notifi_reply_t_5312c8_idx'),
        ),
    ]
