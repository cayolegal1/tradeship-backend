# Generated by Django 5.2.6 on 2025-09-18 21:23

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_payment_method_id', models.CharField(help_text='Stripe payment method ID', max_length=100)),
                ('payment_type', models.CharField(choices=[('card', 'Credit/Debit Card'), ('paypal', 'PayPal'), ('bank_account', 'Bank Account')], help_text='Type of payment method', max_length=20)),
                ('last_four', models.CharField(blank=True, help_text='Last 4 digits of card/account', max_length=4)),
                ('brand', models.CharField(blank=True, help_text='Card brand (Visa, Mastercard, etc.)', max_length=20)),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default payment method')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this payment method is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='User who owns this payment method', on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_customer_id', models.CharField(blank=True, help_text='Stripe customer ID for this user', max_length=100, null=True)),
                ('available_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Available balance for new transactions', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('escrow_balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount currently held in escrow for active trades', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_deposited', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount ever deposited', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_withdrawn', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount ever withdrawn', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('total_shipping_paid', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total shipping costs paid', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('withdrawal_limit_daily', models.DecimalField(decimal_places=2, default=Decimal('1000.00'), help_text='Daily withdrawal limit', max_digits=8)),
                ('withdrawal_limit_monthly', models.DecimalField(decimal_places=2, default=Decimal('10000.00'), help_text='Monthly withdrawal limit', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(help_text='User who owns this wallet', on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='WalletTransaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_type', models.CharField(choices=[('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('escrow_deposit', 'Escrow Deposit'), ('escrow_release', 'Escrow Release'), ('escrow_refund', 'Escrow Refund'), ('shipping_payment', 'Shipping Payment'), ('trade_fee', 'Trade Fee'), ('refund', 'Refund')], help_text='Type of transaction', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Transaction amount', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', help_text='Current status of the transaction', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Description or notes about the transaction')),
                ('stripe_payment_intent_id', models.CharField(blank=True, help_text='Stripe PaymentIntent ID for this transaction', max_length=100, null=True)),
                ('stripe_charge_id', models.CharField(blank=True, help_text='Stripe Charge ID for this transaction', max_length=100, null=True)),
                ('trade_id', models.UUIDField(blank=True, help_text='Related trade ID if applicable', null=True)),
                ('platform_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Platform fee for this transaction', max_digits=8)),
                ('stripe_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Stripe processing fee', max_digits=8)),
                ('balance_before', models.DecimalField(blank=True, decimal_places=2, help_text='Available balance before transaction', max_digits=10, null=True)),
                ('balance_after', models.DecimalField(blank=True, decimal_places=2, help_text='Available balance after transaction', max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When the transaction was completed', null=True)),
                ('payment_method', models.ForeignKey(blank=True, help_text='Payment method used for this transaction', null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps_payment.paymentmethod')),
                ('wallet', models.ForeignKey(help_text='Wallet this transaction belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='apps_payment.userwallet')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BankAccount',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('stripe_bank_account_id', models.CharField(help_text='Stripe bank account ID', max_length=100)),
                ('bank_name', models.CharField(help_text='Name of the bank', max_length=100)),
                ('account_holder_name', models.CharField(help_text='Name on the bank account', max_length=100)),
                ('last_four', models.CharField(help_text='Last 4 digits of account number', max_length=4)),
                ('routing_number_last_four', models.CharField(help_text='Last 4 digits of routing number', max_length=4)),
                ('is_verified', models.BooleanField(default=False, help_text='Whether the bank account is verified')),
                ('is_default', models.BooleanField(default=False, help_text='Whether this is the default withdrawal account')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this bank account is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(help_text='User who owns this bank account', on_delete=django.db.models.deletion.CASCADE, related_name='bank_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user'], name='apps_paymen_user_id_63fd35_idx'), models.Index(fields=['stripe_bank_account_id'], name='apps_paymen_stripe__68c04c_idx'), models.Index(fields=['is_default'], name='apps_paymen_is_defa_6574ff_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['user'], name='apps_paymen_user_id_f4e55a_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['stripe_payment_method_id'], name='apps_paymen_stripe__451e13_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentmethod',
            index=models.Index(fields=['is_default'], name='apps_paymen_is_defa_d29c42_idx'),
        ),
        migrations.AddIndex(
            model_name='userwallet',
            index=models.Index(fields=['user'], name='apps_paymen_user_id_6566c5_idx'),
        ),
        migrations.AddIndex(
            model_name='userwallet',
            index=models.Index(fields=['stripe_customer_id'], name='apps_paymen_stripe__054403_idx'),
        ),
        migrations.AddIndex(
            model_name='userwallet',
            index=models.Index(fields=['created_at'], name='apps_paymen_created_2dbd9e_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['wallet'], name='apps_paymen_wallet__c47369_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['transaction_type'], name='apps_paymen_transac_86c3bd_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['status'], name='apps_paymen_status_cfaf6d_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['stripe_payment_intent_id'], name='apps_paymen_stripe__d11aaf_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['trade_id'], name='apps_paymen_trade_i_6fbc33_idx'),
        ),
        migrations.AddIndex(
            model_name='wallettransaction',
            index=models.Index(fields=['created_at'], name='apps_paymen_created_c7edd7_idx'),
        ),
    ]
