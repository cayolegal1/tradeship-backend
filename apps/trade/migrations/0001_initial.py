# Generated by Django 5.2.6 on 2025-09-15 12:01

import apps.trade.models
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(help_text='Item title', max_length=200)),
                ('tags', models.CharField(choices=[('electronics', 'Electronics'), ('clothing', 'Clothing'), ('books', 'Books'), ('home', 'Home & Garden'), ('sports', 'Sports & Outdoors'), ('toys', 'Toys & Games'), ('collectibles', 'Collectibles'), ('jewelry', 'Jewelry'), ('art', 'Art & Crafts'), ('other', 'Other')], default='other', help_text='Item category tag', max_length=20)),
                ('description', models.TextField(help_text='Detailed item description')),
                ('estimated_value', models.DecimalField(decimal_places=2, help_text='Estimated value in USD', max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('is_available_for_trade', models.BooleanField(default=True, help_text='Whether item is available for trading')),
                ('trade_preferences', models.CharField(blank=True, help_text='What owner is looking to trade for', max_length=200)),
                ('minimum_trade_value', models.DecimalField(blank=True, decimal_places=2, help_text='Minimum acceptable trade value', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('accepts_cash_offers', models.BooleanField(default=True, help_text='Whether owner accepts cash offers')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ItemImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('image', models.ImageField(help_text='Item image file', upload_to=apps.trade.models.upload_item_image_path)),
                ('name', models.CharField(help_text='Image name/description', max_length=200)),
                ('is_primary', models.BooleanField(default=False, help_text='Is this the primary image?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='apps_trade.item')),
            ],
            options={
                'ordering': ['-is_primary', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentShippingSetup',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shipping_method', models.CharField(choices=[('standard', 'Standard Shipping'), ('expedited', 'Expedited Shipping'), ('overnight', 'Overnight Shipping'), ('pickup', 'Local Pickup')], default='standard', help_text='Preferred shipping method', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='payment_shipping_setup', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment & Shipping Setup',
                'verbose_name_plural': 'Payment & Shipping Setups',
            },
        ),
        migrations.CreateModel(
            name='ShippingAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('address_line_1', models.CharField(help_text='Primary address line', max_length=255)),
                ('address_line_2', models.CharField(blank=True, help_text='Secondary address line', max_length=255)),
                ('city', models.CharField(help_text='City', max_length=100)),
                ('state', models.CharField(help_text='State/Province', max_length=100)),
                ('zip_code', models.CharField(help_text='ZIP/Postal code', max_length=20)),
                ('country', models.CharField(default='United States', help_text='Country', max_length=100)),
                ('is_default', models.BooleanField(default=False, help_text='Is this the default address?')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shipping Address',
                'verbose_name_plural': 'Shipping Addresses',
            },
        ),
        migrations.CreateModel(
            name='ShippingDetails',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('shipping_weight', models.DecimalField(decimal_places=2, help_text='Weight in pounds', max_digits=8, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('length', models.DecimalField(decimal_places=2, help_text='Length in inches', max_digits=6, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('width', models.DecimalField(decimal_places=2, help_text='Width in inches', max_digits=6, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('height', models.DecimalField(decimal_places=2, help_text='Height in inches', max_digits=6, validators=[django.core.validators.MinValueValidator(0.1)])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_details', to='apps_trade.item')),
            ],
            options={
                'verbose_name': 'Shipping Detail',
                'verbose_name_plural': 'Shipping Details',
            },
        ),
        migrations.CreateModel(
            name='ShippingPreferences',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('preferred_carrier', models.CharField(choices=[('managers', 'Managers'), ('developer', 'Developer'), ('doctor', 'Doctor'), ('dentist', 'Dentist')], default='managers', help_text='Preferred shipping carrier', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipping_preferences', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Shipping Preference',
                'verbose_name_plural': 'Shipping Preferences',
            },
        ),
        migrations.CreateModel(
            name='TermsAgreement',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('item_details_accurate', models.BooleanField(default=False, help_text='User confirms item details are accurate')),
                ('agrees_to_terms', models.BooleanField(default=False, help_text='User agrees to TradeShip Terms of Use')),
                ('agrees_to_escrow', models.BooleanField(default=False, help_text='User agrees to use escrow via Trustap')),
                ('understands_fund_release', models.BooleanField(default=False, help_text='User understands fund release terms')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of agreement', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string')),
                ('terms_version', models.CharField(default='1.0', help_text='Version of terms agreed to', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terms_agreements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Terms Agreement',
                'verbose_name_plural': 'Terms Agreements',
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cash_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Additional cash amount in trade', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('accepted', 'Accepted'), ('in_progress', 'In Progress'), ('in_escrow', 'In Escrow'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('disputed', 'Disputed')], default='pending', help_text='Current trade status', max_length=20)),
                ('notes', models.TextField(blank=True, help_text='Trade notes or special instructions')),
                ('escrow_reference', models.CharField(blank=True, help_text='External escrow service reference', max_length=100)),
                ('estimated_completion', models.DateTimeField(blank=True, help_text='Estimated completion date', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('accepted_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
                ('item_offered', models.ForeignKey(help_text='Item being offered in trade', on_delete=django.db.models.deletion.CASCADE, related_name='trades_as_offered', to='apps_trade.item')),
                ('item_requested', models.ForeignKey(blank=True, help_text='Item being requested in trade (optional for cash trades)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trades_as_requested', to='apps_trade.item')),
                ('trader_offering', models.ForeignKey(help_text='User offering their item for trade', on_delete=django.db.models.deletion.CASCADE, related_name='trades_offering', to=settings.AUTH_USER_MODEL)),
                ('trader_receiving', models.ForeignKey(help_text='User receiving the offered item', on_delete=django.db.models.deletion.CASCADE, related_name='trades_receiving', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TradeRating',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('communication_rating', models.PositiveSmallIntegerField(help_text='Communication rating (1-5)')),
                ('item_condition_rating', models.PositiveSmallIntegerField(help_text='Item condition rating (1-5)')),
                ('shipping_rating', models.PositiveSmallIntegerField(help_text='Shipping/delivery rating (1-5)')),
                ('overall_rating', models.PositiveSmallIntegerField(help_text='Overall experience rating (1-5)')),
                ('feedback', models.TextField(blank=True, help_text='Written feedback about the trade')),
                ('would_trade_again', models.BooleanField(default=True, help_text='Would trade with this person again')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('rated_trader', models.ForeignKey(help_text='User being rated', on_delete=django.db.models.deletion.CASCADE, related_name='ratings_received', to=settings.AUTH_USER_MODEL)),
                ('rater', models.ForeignKey(help_text='User giving the rating', on_delete=django.db.models.deletion.CASCADE, related_name='ratings_given', to=settings.AUTH_USER_MODEL)),
                ('trade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='apps_trade.trade')),
            ],
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['tags'], name='apps_trade__tags_e9ef70_idx'),
        ),
        migrations.AddIndex(
            model_name='item',
            index=models.Index(fields=['owner'], name='apps_trade__owner_i_8fa0dd_idx'),
        ),
        migrations.AddIndex(
            model_name='itemimage',
            index=models.Index(fields=['item'], name='apps_trade__item_id_f98245_idx'),
        ),
        migrations.AddIndex(
            model_name='itemimage',
            index=models.Index(fields=['is_primary'], name='apps_trade__is_prim_e1d97e_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentshippingsetup',
            index=models.Index(fields=['user'], name='apps_trade__user_id_3c4690_idx'),
        ),
        migrations.AddIndex(
            model_name='shippingaddress',
            index=models.Index(fields=['user'], name='apps_trade__user_id_4db783_idx'),
        ),
        migrations.AddIndex(
            model_name='shippingaddress',
            index=models.Index(fields=['is_default'], name='apps_trade__is_defa_ba6f07_idx'),
        ),
        migrations.AddIndex(
            model_name='shippingdetails',
            index=models.Index(fields=['item'], name='apps_trade__item_id_b1f9cd_idx'),
        ),
        migrations.AddIndex(
            model_name='shippingpreferences',
            index=models.Index(fields=['user'], name='apps_trade__user_id_f4f348_idx'),
        ),
        migrations.AddIndex(
            model_name='termsagreement',
            index=models.Index(fields=['user'], name='apps_trade__user_id_cea07a_idx'),
        ),
        migrations.AddIndex(
            model_name='termsagreement',
            index=models.Index(fields=['created_at'], name='apps_trade__created_2f9543_idx'),
        ),
        migrations.AddIndex(
            model_name='termsagreement',
            index=models.Index(fields=['terms_version'], name='apps_trade__terms_v_a3916f_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['trader_offering'], name='apps_trade__trader__7958bb_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['trader_receiving'], name='apps_trade__trader__eab80e_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['status'], name='apps_trade__status_d38927_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['created_at'], name='apps_trade__created_9031db_idx'),
        ),
        migrations.AddIndex(
            model_name='traderating',
            index=models.Index(fields=['rated_trader'], name='apps_trade__rated_t_9c65d5_idx'),
        ),
        migrations.AddIndex(
            model_name='traderating',
            index=models.Index(fields=['overall_rating'], name='apps_trade__overall_fdef37_idx'),
        ),
        migrations.AddIndex(
            model_name='traderating',
            index=models.Index(fields=['created_at'], name='apps_trade__created_0b75e4_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='traderating',
            unique_together={('trade', 'rater')},
        ),
    ]
